repos:
  # BUILT-IN HOOKS
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-merge-conflict
        name: Checking merge conflicts
        stages: [pre-commit]
      - id: detect-private-key
        name: Detecting private keys
        stages: [pre-commit]
      # No commit to main branch
      # No commit to branch that isn't named correctly
      - id: no-commit-to-branch
        name: "
          Preventing commits to main branch \n
          AND \n
          incorrectly named branches \n
          (Note: Must be feat|fix|docs/[issue-number]_[branch-name])\n
          (Note: Use 'git branch -m <new-branch-name>' to rename branch if needed)
        "
        stages: [pre-commit]
        args:
          [
            '--branch',
            'main',
            '--pattern',
            '^(?!^(feat|fix|docs)\/[0-9]+_).*$',
          ]
  
  # ADD ISSUE NUMBER TO COMMIT
  - repo: local
    hooks:
      - id: add-issue-to-commit
        name: Add issue number to commit
        entry: git-hooks/add-issue-to-commit
        language: script
        stages: [prepare-commit-msg]
  
  # LINTING & FORMATTING PYTHON
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.4.7
    hooks:
      - id: ruff
        name: Linting python code
        types: [python]
        stages: [pre-commit]
        args: ['--fix']
      - id: ruff
        name: Linting python imports
        types: [python]
        stages: [pre-commit]
        args: ['--select', 'I', '--fix']
      - id: ruff-format
        name: Formatting python code
        types: [python]
        stages: [pre-commit]
  
  # LINTING FRONTEND
  - repo: local
    hooks:
      - id: ESLint
        # We are using bash -c to run the command in the frontend directory
        entry: bash -c 'cd frontend && npx eslint . --plugin @next/eslint-plugin-next'
        name: Linting front-end code
        language: system
        stages: [pre-commit]
        

  # TYPE CHECKING PYTHON
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.0
    hooks:
      - id: mypy
        types: [python]
        name: Type checking python code
        additional_dependencies:
          # These depdendencies job is to provide type hints/checking for Django
          [django-stubs, djangorestframework-stubs]
        stages: [pre-commit]
  
  # CHECKING FOR PYTHON SECURITY ISSUES
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        name: Checking for python security issues
        stages: [pre-commit]
  
  # FORMATTING FRONT-END CODE
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: "
          Formatting front-end code \n
          (Note: re-commit if files were modified by this hook)
        "
        stages: [pre-commit]
        # Apply to all files in the frontend directory
        # files: 'frontend/.*'
        args:
          [
            # ⚠️ If you modify any of these values
            # make sure to update the .prettierrc file as well
            # to keep the configuration consistent ⚠️
            '--tab-width',
            '2',
            '--single-quote',
            '--no-semi',
            '--jsx-single-quote',
            '--print-width',
            '82',
            '--arrow-parens',
            'always',
            '--bracket-spacing',
            'true',
            '--end-of-line',
            'lf',
            '--bracket-same-line',
            'false',
            '--quote-props',
            'consistent',
          ]
